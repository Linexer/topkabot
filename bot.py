#!/usr/bin/python

import telebot
import config
import cherrypy

WEBHOOK_HOST = '62.109.19.45'
WEBHOOK_PORT = 443  # 443, 80, 88 –∏–ª–∏ 8443 (–ø–æ—Ä—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç–∫—Ä—ã—Ç!)
WEBHOOK_LISTEN = '62.109.19.45'  # –ù–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö –ø—Ä–∏–¥–µ—Ç—Å—è —É–∫–∞–∑—ã–≤–∞—Ç—å —Ç–∞–∫–æ–π –∂–µ IP, —á—Ç–æ –∏ –≤—ã—à–µ

WEBHOOK_SSL_CERT = './webhook_cert.pem'  # –ü—É—Ç—å –∫ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—É
WEBHOOK_SSL_PRIV = './webhook_pkey.pem'  # –ü—É—Ç—å –∫ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É –∫–ª—é—á—É

WEBHOOK_URL_BASE = "https://%s:%s" % (WEBHOOK_HOST, WEBHOOK_PORT)
WEBHOOK_URL_PATH = "/%s/" % (config.token)

from datetime import datetime
from telebot import types

bot = telebot.TeleBot(config.token)

special_deal = "AgADAgAD5KcxG0x78gvqpMjZiqcAAU_QD0sNAASTNV0rnJV4y8_pAQABAg"
menu = "AgADAgAD5acxG0x78gu69VnqGWsdcJIVSw0ABA-s_bbCJMHQquQBAAEC"

text_messages = {
    'contacts':
        u'\n–ú—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –ø–æ –∞–¥—Ä–µ—Å—É:'
        u'\n–≥. –ß–µ–ª—è–±–∏–Ω—Å–∫, —É–ª. –ö–∏—Ä–æ–≤–∞, 167\n\n'
        u'–†–∞–±–æ—Ç–∞–µ–º –∫–∞–∂–¥—ã–π –¥–µ–Ω—å \n—Å 16:00 –¥–æ 4:00\n\n'
        u'–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É: \n+7 (351) 222-40-90\n\n'
        u'–ì—Ä—É–ø–ø–∞ –í–ö: vk.com/topkabar\n\n'
        u'–°–∞–π—Ç: topkabar.ru\n\n',
    'special_offer':
        u'–¢–µ–ø–µ—Ä—å –∫–∞–∂–¥–æ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –º—ã –¥–µ–ª–∞–µ–º —Å–∫–∏–¥–∫—É –≤ 20% –¥–ª—è –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∑–∞–≤–µ–¥–µ–Ω–∏–π –æ–±—â–µ–ø–∏—Ç–∞ –†–æ—Å—Å–∏–∏!'
        u'\n–ü—Ä–µ–¥—ä—è–≤–∏ —Å–≤–æ–π —Ä–∞–±–æ—á–∏–π –±–µ–π–¥–∂ –∏–ª–∏ –∫–∞—Ä—Ç—É, —Ä–∞—Å—Å–∫–∞–∂–∏, –≥–¥–µ —Ä–∞–±–æ—Ç–∞–µ—à—å –∏ –ø–æ–ª—É—á–∏ –±–æ–Ω—É—Å.'
        u'\n–ú—ã –∑–Ω–∞–µ–º, –∫–∞–∫ —Ö–æ—á–µ—Ç—Å—è –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –≤ –ø—Ä–∏–ª–∏—á–Ω–æ–º –º–µ—Å—Ç–µ, –Ω–æ –Ω–µ —É —Å–µ–±—è –Ω–∞ —Ä–∞–±–æ—Ç–µ, –ø–æ—ç—Ç–æ–º—É, –¢–æ–ø–∫–∞ ‚Äì —Ç–≤–æ–π –≤—ã–±–æ—Ä.'
        u'\n\n–ù–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: +7 (351) 222-40-90.\n',
    'feedback':
        u'–í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –∏–ª–∏ –ø–æ–∂–µ–ª–∞–Ω–∏–µ –ø–æ —Ä–∞–±–æ—Ç–µ –¢–æ–ø–∫–∞-–ë–∞—Ä–∞ –∏ –±–æ—Ç–∞.'
        u'\n\n–ù–∞–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, \n–∞ –∑–∞—Ç–µ–º –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É –æ—Ç–∑—ã–≤–∞.'
        u'\n\n(–ù–µ –º–µ–Ω–µ–µ 30 —Å–∏–º–≤–æ–ª–æ–≤)'
}

food = {
    0: "AgADAgAD66cxG0x78gv8Qgp_ST_0aefLgQ0ABDs_hlF2dQABDemoAgABAg",
    1: "AgADAgAD7KcxG0x78gsU5rCQ2qSjhAI7Sw0ABMEY_Y2ljv0d2_wBAAEC"
}

drinks = {
    0: "AgADAgAD4qcxG0x78gtxiZdAZ_6zrIsOSw0ABGpcZojXVcO3XekBAAEC",
    1: "AgADAgAD5qcxG0x78guLrAABjvHmmVvVEEsNAAS0CA5OzZnTB8LlAQABAg",
    2: "AgADAgAD56cxG0x78gvN8RFHtcwwXKHZgQ0ABA_yEgs6bstqJakCAAEC",
    3: "AgADAgAD6KcxG0x78gtPaVz2r_IJb6LXgQ0ABKRTwRjMUhR-N6MCAAEC",
    4: "AgADAgAD6acxG0x78gtE1vYY-lzcGx4TSw0ABIJ-c_SEVmkyEeYBAAEC",
    5: "AgADAgAD6qcxG0x78gtGhL6V12k200zUgQ0ABOr69tv_6IRUY6YCAAEC"
}

global food_page
food_page = 0
global drinks_page
drinks_page = 0
global curr_page
curr_page = "üè† –ì–ª–∞–≤–Ω–∞—è"

class WebhookServer(object):
	@cherrypy.expose
	def index(self):
		if 'content-length' in cherrypy.request.headers and \
                        'content-type' in cherrypy.request.headers and \
                        cherrypy.request.headers['content-type'] == 'application/json':
		    length = int(cherrypy.request.headers['content-length'])
		    json_string = cherrypy.request.body.read(length).decode("utf-8")
		    update = telebot.types.Update.de_json(json_string)
		    # –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
		    bot.process_new_updates([update])
            return ''
        	else:
    			raise cherrypy.HTTPError(403)

@bot.message_handler(func=lambda message: True, content_types=['text'])
def function(message):

    def –ì–ª–∞–≤–Ω–∞—è():
        global food_page
        food_page = 0
        global drinks_page
        drinks_page = 0
        global curr_page
        curr_page = message.text
        print("Current Page:" + curr_page)
        keyboard = types.ReplyKeyboardMarkup(True, False)
        keyboard.row(u'üìï –ú–µ–Ω—é')
        keyboard.row(u'‚ùó –ê–∫—Ü–∏–∏')
        keyboard.row(u'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã')
        keyboard.row(u'‚úâ –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤')
        bot.send_message(message.chat.id, "üè† –ì–ª–∞–≤–Ω–∞—è", reply_markup=keyboard)

    def –ú–µ–Ω—é():
        global food_page
        food_page = 0
        global drinks_page
        drinks_page = 0
        global curr_page
        curr_page = message.text
        print("Current Page:" + curr_page)
        bot.send_photo(message.chat.id, menu)
        keyboard = types.ReplyKeyboardMarkup(True, False)
        keyboard.row(u'üçΩ –ë–ª—é–¥–∞ –∏ –ó–∞–∫—É—Å–∫–∏', u'üç∫ –ù–∞–ø–∏—Ç–∫–∏')
        keyboard.row(u'üè† –ì–ª–∞–≤–Ω–∞—è')
        bot.send_message(message.chat.id, "üìï –ú–µ–Ω—é", reply_markup=keyboard)

    def –ê–∫—Ü–∏–∏():
        global curr_page
        curr_page = message.text
        print("Current Page:" + curr_page)
        bot.send_photo(message.chat.id, special_deal)
        global curr_date
        curr_date = datetime.now()
        keyboard = types.ReplyKeyboardMarkup(True, False)
        keyboard.row(u'üè† –ì–ª–∞–≤–Ω–∞—è')
        bot.send_message(message.chat.id, "–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∞–∫—Ü–∏–∏ –Ω–∞ " + str(curr_date.strftime('%d/%m/%Y %H:%M\n\n')) + text_messages['special_offer'], reply_markup=keyboard)

    def –ö–æ–Ω—Ç–∞–∫—Ç—ã():
        global curr_page
        curr_page = message.text
        print("Current Page:" + curr_page)
        keyboard = types.ReplyKeyboardMarkup(True, False)
        keyboard.row(u'üè† –ì–ª–∞–≤–Ω–∞—è')
        bot.send_message(message.chat.id, "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã:", reply_markup=keyboard)
        bot.send_message(message.chat.id, text_messages['contacts'], disable_web_page_preview=True)

    def –î–æ–Ω–∞—Ç():
        global curr_page
        curr_page = message.text
        print("Current Page:" + curr_page)
        keyboard = types.ReplyKeyboardMarkup(True, False)
        keyboard.row(u'üè† –ì–ª–∞–≤–Ω–∞—è')
        bot.send_message(message.chat.id, "–ü–æ–º–æ–≥–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –Ω–∞–∫–æ–ø–∏—Ç—å –Ω–∞ —É—á–µ–±–Ω–∏–∫–∏ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é\
                                        \n\n–Ø–Ω–¥–µ–∫—Å-–∫–æ—à–µ–ª–µ–∫: money.yandex.ru/to/410013576076940/30\
                                        \n\n–ù–∞–ø–∏—Å–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É: telegram.me/linexer", disable_web_page_preview=True, reply_markup=keyboard)

    def –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ_–æ—Ç–∑—ã–≤–∞():
        global curr_page
        curr_page = "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –û—Ç–∑—ã–≤–∞"
        print("Verifying feedback...")
        print("Current Page:" + curr_page)
        keyboard = types.ReplyKeyboardMarkup(True, False)
        keyboard.row(u'‚úî –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å')
        keyboard.row(u'üí∞ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å')
        keyboard.row(u'üè† –ì–ª–∞–≤–Ω–∞—è')
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤?", reply_markup=keyboard)

    def –û—Ç–∑—ã–≤():
        global curr_page
        curr_page = "‚úâ –û—Å—Ç–∞–≤–∏—Ç—å –û—Ç–∑—ã–≤"
        print("Current Page:" + curr_page)
        keyboard = types.ReplyKeyboardMarkup(True, False)
        keyboard.row(u'üí∞ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å')
        keyboard.row(u'üè† –ì–ª–∞–≤–Ω–∞—è')
        bot.send_message(message.chat.id, text_messages['feedback'], reply_markup=keyboard)

    def –ë–ª—é–¥–∞_–∏_–ó–∞–∫—É—Å–∫–∏():
        global curr_page
        curr_page = "üçΩ –ë–ª—é–¥–∞ –∏ –ó–∞–∫—É—Å–∫–∏"
        print("Current Page:" + curr_page)
        #global food_page
        bot.send_photo(message.chat.id, food[food_page])
        keyboard = types.ReplyKeyboardMarkup(True, False)
        keyboard.row(u'‚óÄ', u'‚ñ∂')
        keyboard.row(u'üìï –ú–µ–Ω—é')
        keyboard.row(u'üè† –ì–ª–∞–≤–Ω–∞—è')
        bot.send_message(message.chat.id, "–ú–µ–Ω—é / –ë–ª—é–¥–∞ –∏ –ó–∞–∫—É—Å–∫–∏ / –°—Ç—Ä–∞–Ω–∏—Ü–∞ " + str(food_page+1) + "/2", reply_markup=keyboard)

    def –ù–∞–ø–∏—Ç–∫–∏():
        global curr_page
        curr_page = "üç∫ –ù–∞–ø–∏—Ç–∫–∏"
        print("Current Page:" + curr_page)
        # global food_page
        bot.send_photo(message.chat.id, drinks[drinks_page])
        keyboard = types.ReplyKeyboardMarkup(True, False)
        keyboard.row('‚óÄ ', ' ‚ñ∂')
        keyboard.row(u'üìï –ú–µ–Ω—é')
        keyboard.row(u'üè† –ì–ª–∞–≤–Ω–∞—è')
        bot.send_message(message.chat.id, "–ú–µ–Ω—é / –ù–∞–ø–∏—Ç–∫–∏ / –°—Ç—Ä–∞–Ω–∏—Ü–∞ " + str(drinks_page + 1) + "/6",
                         reply_markup=keyboard)

    #curr_page = "–ì–ª–∞–≤–Ω–∞—è"
    if (message.text) == "/start" or (message.text) == "üè† –ì–ª–∞–≤–Ω–∞—è":
        message.text = 'üè† –ì–ª–∞–≤–Ω–∞—è'
        –ì–ª–∞–≤–Ω–∞—è()
    elif (message.text) == "/donate" or (message.text) == "üí∞ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å":
        message.text = '–î–æ–Ω–∞—Ç'
        –î–æ–Ω–∞—Ç()
    elif (message.text) == "/menu" or (message.text) == "üìï –ú–µ–Ω—é":
        –ú–µ–Ω—é()
    elif (message.text) == "/special" or (message.text) == "‚ùó –ê–∫—Ü–∏–∏":
        –ê–∫—Ü–∏–∏()
    elif (message.text) == "/contacts" or (message.text) == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã":
        –ö–æ–Ω—Ç–∞–∫—Ç—ã()
    elif (message.text) == "/feedback" or (message.text) == "‚úâ –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤":
        –û—Ç–∑—ã–≤()
    elif (message.text) == "/food" or (message.text) == "üçΩ –ë–ª—é–¥–∞ –∏ –ó–∞–∫—É—Å–∫–∏":
        –ë–ª—é–¥–∞_–∏_–ó–∞–∫—É—Å–∫–∏()
    elif curr_page == "üçΩ –ë–ª—é–¥–∞ –∏ –ó–∞–∫—É—Å–∫–∏":
        if(message.text) == u'‚ñ∂':
            global food_page
            food_page = food_page + 1
            food_page = abs(food_page % 2)
            bot.send_chat_action(message.chat.id, 'upload_photo')
            –ë–ª—é–¥–∞_–∏_–ó–∞–∫—É—Å–∫–∏()
        elif (message.text) == u'‚óÄ':
            food_page = food_page - 1
            food_page = abs(food_page % 2)
            bot.send_chat_action(message.chat.id, 'upload_photo')
            –ë–ª—é–¥–∞_–∏_–ó–∞–∫—É—Å–∫–∏()
    elif (message.text) == "/drinks" or (message.text) == "üç∫ –ù–∞–ø–∏—Ç–∫–∏":
        –ù–∞–ø–∏—Ç–∫–∏()
    elif curr_page == "üç∫ –ù–∞–ø–∏—Ç–∫–∏":
        if (message.text) == u'‚ñ∂':
            global drinks_page
            print("food_page before: " + str(drinks_page))
            drinks_page = drinks_page + 1
            drinks_page = abs(drinks_page % 6)
            print("food_page after: " + str(drinks_page))
            –ù–∞–ø–∏—Ç–∫–∏()
        elif (message.text) == u'‚óÄ':
            print("food_page before: " + str(drinks_page))
            drinks_page = drinks_page - 1
            drinks_page = abs(drinks_page % 6)
            print("food_page after: " + str(drinks_page))
            –ù–∞–ø–∏—Ç–∫–∏()
    elif (message.text) == "–ù–∞–∑–∞–¥" and curr_page == "üìï –ú–µ–Ω—é":
        –ì–ª–∞–≤–Ω–∞—è()
    elif (message.text) == "–ù–∞–∑–∞–¥" and curr_page == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã":
        –ì–ª–∞–≤–Ω–∞—è()
    elif curr_page == "‚úâ –û—Å—Ç–∞–≤–∏—Ç—å –û—Ç–∑—ã–≤":
        if len(message.text) > 30:
            print("Current Page:" + curr_page)
            global feedback_message
            global feedback_message_id
            feedback_message = message.text
            feedback_message_id = message.message_id
            print("Feedback:" + feedback_message)
            print("Feedback Message ID:" + str(feedback_message_id))
            –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ_–æ—Ç–∑—ã–≤–∞()
        elif len(message.text) < 30:
            print("Current Page:" + curr_page)
            bot.send_message(message.chat.id, "–°–∏–º–≤–æ–ª–æ–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏: " + str(len(message.text)) + "\n–î–ª–∏–Ω–∞ –æ—Ç–∑—ã–≤–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 30 —Å–∏–º–≤–æ–ª–æ–≤")
    elif curr_page == "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –û—Ç–∑—ã–≤–∞":
        if(message.text) == "‚úî –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å":
            bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à –æ—Ç–∑—ã–≤!")
            bot.send_message(config.admin_chat, "üí¨ –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤: " + feedback_message)
            –ì–ª–∞–≤–Ω–∞—è()

def listener(message):
    for m in message:
        print("====================================")
        print("Listener Chat ID: " + str(m.chat.id))
        print("Listener Message Id:" + str(m.message_id))
        print("Listener Text:" + m.text)

bot.set_update_listener(listener)

bot.remove_webhook()
bot.set_webhook(url=WEBHOOK_URL_BASE + WEBHOOK_URL_PATH,
                certificate=open(WEBHOOK_SSL_CERT, 'r'))

cherrypy.config.update({
    'server.socket_host': WEBHOOK_LISTEN,
    'server.socket_port': WEBHOOK_PORT,
    'server.ssl_module': 'builtin',
    'server.ssl_certificate': WEBHOOK_SSL_CERT,
    'server.ssl_private_key': WEBHOOK_SSL_PRIV
})

cherrypy.quickstart(WebhookServer(), WEBHOOK_URL_PATH, {'/': {}})

bot.polling(none_stop=True)